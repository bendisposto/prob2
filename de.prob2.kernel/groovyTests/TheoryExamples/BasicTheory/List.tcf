<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/BasicTheory/List.tuf">
<org.eventb.theory.core.scTypeParameter name="S" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.typeParameter#," org.eventb.core.type="ℙ(S)"/>
<org.eventb.theory.core.scTypeParameter name="T" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.typeParameter#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDatatypeDefinition name="List" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'" org.eventb.theory.core.hasError="false">
<org.eventb.theory.core.scTypeArgument name="T" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="T"/>
<org.eventb.theory.core.scDatatypeConstructor name="nil" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#("/>
<org.eventb.theory.core.scDatatypeConstructor name="cons" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#)">
<org.eventb.theory.core.scConstructorArgument name="head" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="T"/>
<org.eventb.theory.core.scConstructorArgument name="tail" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.datatypeDefinition#'|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="List"/>
</org.eventb.theory.core.scDatatypeConstructor>
</org.eventb.theory.core.scDatatypeDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisu" org.eventb.core.label="listSize" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="l" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="l">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(T)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="0"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(x,l0)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="1+listSize(l0)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisv" org.eventb.core.label="append" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(T)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="l" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="T"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="l">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(T)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="cons(x,nil ⦂ List(T))"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(x0,l0)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="cons(x0,append(l0,x))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisw" org.eventb.core.label="rev" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(T)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="l" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="l">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(T)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(T)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(x,l0)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="append(rev(l0),x)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisx" org.eventb.core.label="map" org.eventb.core.predicate="f∈T → S" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(S)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T×S)"/>
<org.eventb.theory.core.scOperatorArgument name="l" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="l">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(T)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(S)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(x,l0)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="cons(f(x),map(f,l0))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisy" org.eventb.core.label="conc" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(T)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="l1" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scOperatorArgument name="l2" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="l1">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(T)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="l2"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(x,l0)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="cons(x,conc(l0,l2))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Lisz" org.eventb.core.label="flatten" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(T)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="l" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(List(T))"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="l">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(List(T))" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(T)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(l0,ll0)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="conc(l0,flatten(ll0))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)">
<org.eventb.theory.core.scMetavariable name="l" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRewriteRule name="List.listSize case 0" org.eventb.core.accurate="true" org.eventb.core.label="List.listSize case 0" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="listSize expansion" org.eventb.theory.core.formula="listSize(nil ⦂ List(T))">
<org.eventb.theory.core.scRewriteRuleRHS name="listSize rhs" org.eventb.core.label="listSize rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="0"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="List.listSize case 1" org.eventb.core.accurate="true" org.eventb.core.label="List.listSize case 1" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="listSize expansion" org.eventb.theory.core.formula="listSize(cons(x,l0))">
<org.eventb.theory.core.scRewriteRuleRHS name="listSize rhs" org.eventb.core.label="listSize rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="1+listSize(l0)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="l0" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="T"/>
<org.eventb.theory.core.scRewriteRule name="List.append case 0" org.eventb.core.accurate="true" org.eventb.core.label="List.append case 0" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="append expansion" org.eventb.theory.core.formula="append(nil ⦂ List(T),x)">
<org.eventb.theory.core.scRewriteRuleRHS name="append rhs" org.eventb.core.label="append rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="cons(x,nil ⦂ List(T))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="List.append case 1" org.eventb.core.accurate="true" org.eventb.core.label="List.append case 1" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="append expansion" org.eventb.theory.core.formula="append(cons(x0,l0),x)">
<org.eventb.theory.core.scRewriteRuleRHS name="append rhs" org.eventb.core.label="append rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="cons(x0,append(l0,x))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="x0" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.core.type="T"/>
<org.eventb.theory.core.scRewriteRule name="List.rev case 0" org.eventb.core.accurate="true" org.eventb.core.label="List.rev case 0" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="rev expansion" org.eventb.theory.core.formula="rev(nil ⦂ List(T))">
<org.eventb.theory.core.scRewriteRuleRHS name="rev rhs" org.eventb.core.label="rev rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="nil ⦂ List(T)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="List.rev case 1" org.eventb.core.accurate="true" org.eventb.core.label="List.rev case 1" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="rev expansion" org.eventb.theory.core.formula="rev(cons(x,l0))">
<org.eventb.theory.core.scRewriteRuleRHS name="rev rhs" org.eventb.core.label="rev rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="append(rev(l0),x)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="f" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.core.type="ℙ(T×S)"/>
<org.eventb.theory.core.scRewriteRule name="List.map case 0" org.eventb.core.accurate="true" org.eventb.core.label="List.map case 0" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="map expansion" org.eventb.theory.core.formula="map(f,nil ⦂ List(T))">
<org.eventb.theory.core.scRewriteRuleRHS name="map rhs" org.eventb.core.label="map rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.formula="nil ⦂ List(S)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="List.map case 1" org.eventb.core.accurate="true" org.eventb.core.label="List.map case 1" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="map expansion" org.eventb.theory.core.formula="map(f,cons(x,l0))">
<org.eventb.theory.core.scRewriteRuleRHS name="map rhs" org.eventb.core.label="map rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.formula="cons(f(x),map(f,l0))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="l1" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scMetavariable name="l2" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.core.type="List(T)"/>
<org.eventb.theory.core.scRewriteRule name="List.conc case 0" org.eventb.core.accurate="true" org.eventb.core.label="List.conc case 0" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="conc expansion" org.eventb.theory.core.formula="conc(nil ⦂ List(T),l2)">
<org.eventb.theory.core.scRewriteRuleRHS name="conc rhs" org.eventb.core.label="conc rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.formula="l2"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="List.conc case 1" org.eventb.core.accurate="true" org.eventb.core.label="List.conc case 1" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="conc expansion" org.eventb.theory.core.formula="conc(cons(x,l0),l2)">
<org.eventb.theory.core.scRewriteRuleRHS name="conc rhs" org.eventb.core.label="conc rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.formula="cons(x,conc(l0,l2))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="l_" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.core.type="List(List(T))"/>
<org.eventb.theory.core.scRewriteRule name="List.flatten case 0" org.eventb.core.accurate="true" org.eventb.core.label="List.flatten case 0" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="flatten expansion" org.eventb.theory.core.formula="flatten(nil ⦂ List(List(T)))">
<org.eventb.theory.core.scRewriteRuleRHS name="flatten rhs" org.eventb.core.label="flatten rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.formula="nil ⦂ List(T)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="List.flatten case 1" org.eventb.core.accurate="true" org.eventb.core.label="List.flatten case 1" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="flatten expansion" org.eventb.theory.core.formula="flatten(cons(l0,ll0))">
<org.eventb.theory.core.scRewriteRuleRHS name="flatten rhs" org.eventb.core.label="flatten rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.formula="conc(l0,flatten(ll0))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scMetavariable name="ll0" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.core.type="List(List(T))"/>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="thm0" org.eventb.core.predicate="∀l⦂List(T),x⦂T·l∈List(T)∧x∈T⇒listSize(append(l,x))=1+listSize(l)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#=" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="thm2" org.eventb.core.predicate="∀l⦂List(T),f⦂ℙ(T×S),x⦂T·l∈List(T)∧f∈T → S∧x∈T⇒map(f,append(l,x))=append(map(f,l),f(x))" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#\/" org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="thm1" org.eventb.core.predicate="∀l⦂List(T),f⦂ℙ(T×S)·l∈List(T)∧f∈T → S⇒rev(map(f,l))=map(f,rev(l))" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#." org.eventb.theory.core.order="2"/>
<org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="thm4" org.eventb.core.predicate="∀l⦂List(T),x⦂T·l∈List(T)∧x∈T⇒rev(append(l,x))=cons(x,rev(l))" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#1" org.eventb.theory.core.order="3"/>
<org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="thm3" org.eventb.core.predicate="∀l⦂List(T)·l∈List(T)⇒rev(rev(l))=l" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#0" org.eventb.theory.core.order="4"/>
<org.eventb.theory.core.scTheorem name="generatedBlocq" org.eventb.core.label="thm6" org.eventb.core.predicate="∀l⦂List(T)·l∈List(T)⇒conc(l,nil ⦂ List(T))=l" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#5" org.eventb.theory.core.order="5"/>
<org.eventb.theory.core.scTheorem name="generatedBlocr" org.eventb.core.label="thm7" org.eventb.core.predicate="∀l1⦂List(T),l2⦂List(T),x⦂T·l1∈List(T)∧l2∈List(T)∧x∈T⇒append(conc(l1,l2),x)=conc(l1,append(l2,x))" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#6" org.eventb.theory.core.order="6"/>
<org.eventb.theory.core.scTheorem name="generatedBlocs" org.eventb.core.label="thm5" org.eventb.core.predicate="∀l1⦂List(T)·l1∈List(T)⇒(∀l2⦂List(T)·l2∈List(T)⇒rev(conc(l1,l2))=conc(rev(l2),rev(l1)))" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#4" org.eventb.theory.core.order="7"/>
<org.eventb.theory.core.scTheorem name="generatedBloct" org.eventb.core.label="thm10" org.eventb.core.predicate="∀l1⦂List(T),l2⦂List(T),l3⦂List(T)·l1∈List(T)∧l2∈List(T)∧l3∈List(T)⇒conc(conc(l1,l2),l3)=conc(l1,conc(l2,l3))" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#:" org.eventb.theory.core.order="8"/>
<org.eventb.theory.core.scTheorem name="generatedBlocu" org.eventb.core.label="thm9" org.eventb.core.predicate="∀ll⦂List(List(T)),l⦂List(T)·ll∈List(List(T))∧l∈List(T)⇒flatten(append(ll,l))=conc(flatten(ll),l)" org.eventb.core.source="/BasicTheory/List.tuf|org.eventb.theory.core.theoryRoot#List|org.eventb.theory.core.theorem#8" org.eventb.theory.core.order="9"/>
</org.eventb.theory.core.scTheoryRoot>
